<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="wheel_radius" value="0.16" /> <!-- without load the wheel diameter is 0.35 (radius = 0.175) -->
    <xacro:property name="wheel_lenght" value="0.14" />
    <xacro:property name="hinge_radius" value="0.05" />
    <xacro:property name="hinge_lenght" value="0.07" />

    <xacro:property name="base_lenght" value="1.0" />
    <xacro:property name="base_width" value="0.6" />
    <xacro:property name="base_height" value="0.4" />
    <xacro:property name="base_xyz" value="0 0 0" /> <!-- ${base_height / 2} : what z used to be -->
    <xacro:property name="wheel_rpy" value="${pi / 2.0} 0 0" />
    <xacro:property name="hinge_rpy" value="0 0 0" />


    <!-- @@@@@@@@@@@@@@@@          Functions                @@@@@@@@@@@@@@@@ -->

    <xacro:macro name="create_wheel_link" params="prefix">

    <link name="${prefix}_wheel_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_lenght}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${wheel_rpy}" />
            <material name="blue" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_lenght}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${wheel_rpy}" />
        </collision>
        <xacro:cylinder_inertia mass="3.0" l="${2*wheel_lenght}" r="${2*wheel_radius}" xyz="0 0 0" rpy="${wheel_rpy}" />
    </link>

    </xacro:macro> 

    <xacro:macro name="create_hinge_link" params="prefix">

    <link name="${prefix}_hinge_link">
        <visual>
            <geometry>
                <cylinder radius="${hinge_radius}" length="${hinge_lenght}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${hinge_rpy}" />
            <material name="blue" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${hinge_radius}" length="${hinge_lenght}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${hinge_rpy}" />
        </collision>
        <xacro:cylinder_inertia mass="1.5" l="${2*hinge_lenght}" r="${2*hinge_radius}" xyz="0 0 0" rpy="${hinge_rpy}" />
    </link>

    </xacro:macro>

    <!-- prismatic joint func -->

    <xacro:macro name="create_prismatic_joint" params="prefix parent child">

    <joint name="${prefix}_prismatic_joint" type="prismatic">
        <parent link="${parent}" />
        <child link="${child}" />
        <origin xyz="0 0 0.2" rpy="0 0 0" />
        <axis xyz="0 0 1" />
        <limit lower="-0.2" upper="0.2" effort="1000.0" velocity="1.0"/>
        <dynamics damping="0.1" friction="0.01" />
    </joint>

    </xacro:macro>

    <!-- @@@@@@@@@@@@@@@@          Robot Creation                @@@@@@@@@@@@@@@@ -->

    <!-- Body -->

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_lenght} ${base_width} ${base_height}" />
            </geometry>
            <origin xyz="${base_xyz}" rpy="0 0 0" />
            <material name="green" />
        </visual>
        <collision>
            <geometry>
                <box size="${base_lenght} ${base_width} ${base_height}" />
            </geometry>
            <origin xyz="${base_xyz}" rpy="0 0 0" />
        </collision>
        <xacro:box_inertia mass="25.0" l="${2*base_lenght}" w="${2*base_width}" h="${2*base_height}" xyz="${base_xyz}" rpy="0 0 0" />
    </link>

    <!-- <joint name="mobile_base_joint" type="fixed">
        <parent link="mobile_base_link" />
        <child link="base_link" />
        <origin xyz="0 0 ${(base_height / 2)}" rpy="0 0 0" />
    </joint> -->

    <!-- wheels creations -->

    <xacro:create_wheel_link prefix="front" />

    <joint name="front_wheel_joint" type="fixed">
        <parent link="base_link" />
        <child link="front_wheel_link" />
        <origin xyz="${(base_lenght / 2)} 0 ${(base_height / 2)}" rpy="0 0 0" />
        <!-- <dynamics damping="10.0" friction="10.0" /> that's actually a lot prettyh sure -->
    </joint>

    <xacro:create_wheel_link prefix="right" />

    <joint name="right_wheel_joint" type="fixed">
        <parent link="base_link" />
        <child link="right_wheel_link" />
        <origin xyz="${-(base_lenght / 2)} ${-(base_width / 2)} ${(base_height / 2)}" rpy="0 0 0" />
    </joint>

    <xacro:create_wheel_link prefix="left" />

    <joint name="left_wheel_joint" type="fixed">
        <parent link="base_link" />
        <child link="left_wheel_link" />
        <origin xyz="${-(base_lenght / 2)} ${(base_width / 2)} ${(base_height / 2)}" rpy="0 0 0" />
    </joint>

    <!-- Prismatic link/joints creation -->

    <xacro:create_hinge_link prefix="front" />

    <xacro:create_hinge_link prefix="left" />

    <xacro:create_hinge_link prefix="right" />

    <xacro:create_prismatic_joint prefix="front" parent="front_wheel_link" child="front_wheel_link"/>  

    <xacro:create_prismatic_joint prefix="left" parent="left_wheel_link" child="left_wheel_link"/>  

    <xacro:create_prismatic_joint prefix="right" parent="right_wheel_link" child="right_wheel_link"/>

    <link name="platform_link">
        <visual>
            <geometry>
                <box size="${base_lenght} ${base_width} ${base_height / 4.0}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="green" />
        </visual>
        <collision>
            <geometry>
                <box size="${base_lenght} ${base_width} ${base_height / 4.0}" />
            </geometry>
            <origin xyz="${base_xyz}" rpy="0 0 0" />
        </collision>
        <xacro:box_inertia mass="25.0" l="${2*base_lenght}" w="${2*base_width}" h="${2*(base_height / 4.0)}" xyz="0 0 0" rpy="0 0 0" />
    </link>
    
    <joint name="platform_joint" type="floating">
        <parent link="front_wheel_link" />
        <child link="platform_link" />
        <!-- <origin xyz="${-(base_lenght / 2)} 0 0" rpy="0 0 0" /> -->
        <!-- <limit effort="100" velocity="100" /> -->
    </joint>

    <!-- <link name="front_hinge">
        <visual>
            <geometry>
                <cylinder radius="${wheel_lenght / 2.0 * 0.6}" length="${wheel_radius - wheel_radius}" />
            </geometry>
            <origin xyz="0 0 ${(wheel_radius - wheel_radius) / 2.0}" rpy="0 0 0" />
            <material name="grey" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_lenght / 2.0 * 0.9}" length="${wheel_radius - wheel_radius}" />
            </geometry>
            <origin xyz="0 0 ${(wheel_radius - wheel_radius) / 2.0}" rpy="0 0 0" />
        </collision>
        <xacro:wheel_inertia mass="0.5" l="${2*(wheel_radius - wheel_radius)}" r="${2*(wheel_lenght / 2.0 * 0.9)}" xyz="0 0 ${(wheel_radius - wheel_radius) / 2.0}" rpy="0 0 0" />
    </link>

    <joint name="front_hinge_joint" type="continuous">
        <parent link="base_link" />
        <child link="front_hinge" />
        <origin xyz="${base_lenght / 2.5} 0 ${-((base_height / 2) + wheel_radius - wheel_radius)}" rpy="0 0 0" />
        <axis xyz="0 0 1" />
    </joint> -->

    

    <!-- camera -->

    <!-- <link name="camera_link">
        <visual>
            <geometry>
                <box size="${camera_l} ${camera_w} ${camera_h}" />
            </geometry>
            <origin xyz="${-(camera_l / 2.0)} 0 0" rpy="0 0 0" />
            <material name="red" />
        </visual>
        <collision>
            <geometry>
                <box size="${camera_l} ${camera_w} ${camera_h}" />
            </geometry>
            <origin xyz="${-(camera_l / 2.0)} 0 0" rpy="0 0 0" />
        </collision>
        <xacro:box_inertia mass="0.1" l="${camera_l}" w="${camera_w}" h="${camera_h}" xyz="0 0 0" rpy="0 0 0" />
    </link>

    <joint name="base_camera_joint" type="fixed">
        <parent link="base_link" />
        <child link="camera_link" />
        <origin xyz="${(base_lenght) / 2.0 + camera_l} 0 ${(base_height / 2.0) - (camera_h / 2.0)}" rpy="0 0 0" />
    </joint> -->

    <!--               camera for sensors                -->

    <!-- <link name="camera_link_optical" />

    <joint name="camera_optical_joint" type="fixed">
    
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    </joint> --> <!-- these values have to be these values otherwise the gazebo camera
        image won't be aligned properly with the frame it is supposedly
        originating from -->

    <!--   Lidar        -->
   
    <!-- <link name="lidar_link">
        <visual>
            <geometry>
                <cylinder radius="${lidar_radius}" length="${lidar_h}" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <box radius="${lidar_radius}" length="${lidar_h}" />
            </geometry>
        </collision>
        <xacro:wheel_inertia mass="0.1" l="${2*lidar_h}" r="${2*lidar_radius}" xyz="0 0 0" rpy="0 0 0" />
    </link>

    <joint name="base_lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_link" />
        <origin xyz="${base_lenght / 4.0} 0 ${(base_height / 2.0) + (lidar_h / 2.0)}" rpy="0 0 0" />
    </joint> -->

</robot>
