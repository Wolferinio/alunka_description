<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <gazebo reference="mobile_base_link">
        <material>Gazebo/Blue</material>
    </gazebo>

    <gazebo reference="rear_wheel_link">
        <material>Gazebo/Yellow</material>
        
        <!-- <mu1 value="10" />
        <mu2 value="10" /> -->
    </gazebo>

    <!-- <gazebo reference="fake_rear_wheel_link">
        <material>Gazebo/Blue</material>

    </gazebo> -->

    <gazebo reference="right_wheel_link">
        <material>Gazebo/Yellow</material>
        <!-- <mu1 value="10" />
        <mu2 value="10" /> -->
    </gazebo>

    <gazebo reference="left_wheel_link">
        <material>Gazebo/Yellow</material>
        <!-- <mu1 value="10" />
        <mu2 value="10" /> -->
    </gazebo> 

    <gazebo reference="platform_link">  
        <material>Gazebo/Yellow</material>
        <self_collide>true</self_collide>
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_diff_drive" filename="libgazebo_ros_diff_drive.so">
            
            <ros>

                <!-- Add a namespace -->
                <namespace></namespace>

            </ros>

            <!-- Update rate in Hz -->
            <update_rate>50</update_rate>

            <!-- wheels -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>

            <!-- kinematics -->
            <wheel_separation>${mobile_w - leg_w}</wheel_separation>
            <wheel_diameter>${wheel_radius * 2}</wheel_diameter>

            <!-- limits -->
            <!-- <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>1.0</max_wheel_acceleration> -->

            <!-- input -->
            <command_topic>cmd_vel</command_topic>

            <!-- output -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

            <odometry_topic>odom</odometry_topic>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>mobile_base_footprint</robot_base_frame>

        </plugin>
    </gazebo>

    <!-- <gazebo> 
        <plugin name="gazebo_ros_ackermann_drive" filename="libgazebo_ros_ackermann_drive.so">

            <ros>
                <namespace>demo</namespace>
                <remapping>cmd_vel:=cmd_demo</remapping>
                <remapping>odom:=odom_demo</remapping>
                <remapping>distance:=distance_demo</remapping>
            </ros>

            <update_rate>100.0</update_rate>

            <!- wheels ->
            <front_left_joint>left_wheel_joint</front_left_joint> 
            <front_right_joint>right_wheel_joint</front_right_joint>
            <rear_left_joint>rear_wheel_joint</rear_left_joint>
            <rear_right_joint>fake_rear_wheel_joint</rear_right_joint>
            <left_steering_joint>left_hinge_joint</left_steering_joint> 
            <right_steering_joint>right_hinge_joint</right_steering_joint>
            <!- <steering_wheel_joint>steering_joint</steering_wheel_joint> ->

            <!- Max absolute steer angle for tire in radians->
            <!- Any cmd_vel angular z greater than this would be capped ->
            <max_steer>0.6458</max_steer>

            <!- Max absolute linear speed in m/s ->
            <max_speed>100.0</max_speed>

            <!- PID tuning ->
            <left_steering_pid_gain>1500 0 1</left_steering_pid_gain>
            <left_steering_i_range>0 0</left_steering_i_range>
            <right_steering_pid_gain>1500 0 1</right_steering_pid_gain>
            <right_steering_i_range>0 0</right_steering_i_range>
            <linear_velocity_pid_gain>1000 0 1</linear_velocity_pid_gain>
            <linear_velocity_i_range>0 0</linear_velocity_i_range>

            <!- output ->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>
            <publish_distance>true</publish_distance>

            <odometry_frame>odom_demo</odometry_frame>
            <robot_base_frame>mobile_base_footprint</robot_base_frame>

        </plugin>
    </gazebo> -->

</robot>